etho0 - wired network

lo - lookback address / localhost 

wlan0 -  wireless network

public_ip - curl ifconfig.me 

private ip - ifconfig

gateway - router ip where 

private_ip(pc/phone) ---------> router (gateway_ip)-----------> public_ip(isp) -------------> internet---------> public_ip---------> router--------> private_ip


#famous port : every service expose with port . http service expose 80 port 

with machine ip => service of http =>  machine_ip : port 


DNS (name of ip ) = dnsgroupe.net(http://36.255.69.72:8081/)



Dns resolve => 
subnet => 

nameserver => 

ns1 , ns2, => 
------------------------------------------------------------------------
check those address => ifconfig
-------------------------------
┌──(shuvo㉿kali)-[~/Desktop/Linux/part 2- Administration]
└─$ ifconfig

eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.174.128  netmask 255.255.255.0  broadcast 192.168.174.255
        inet6 fe80::20c:29ff:feb6:8e17  prefixlen 64  scopeid 0x20<link>
        ether 00:0c:29:b6:8e:17  txqueuelen 1000  (Ethernet)
        RX packets 141579  bytes 190494810 (181.6 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 64582  bytes 8485527 (8.0 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 24  bytes 1440 (1.4 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 24  bytes 1440 (1.4 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

------------------------------------------------------------------------
#how to get the dns server => 
------------------------------

┌──(shuvo㉿kali)-[~/Desktop/Linux/part 2- Administration]
└─$ nslookup google.com      

Server:		192.168.174.2
Address:	192.168.174.2#53

Non-authoritative answer:
Name:	google.com
Address: 142.250.195.78
Name:	google.com
Address: 2404:6800:4007:823::200e

------------------------------------------------------------------------
#show the public ip => 
-------------------------

┌──(ashraful㉿kali)-[~/Laravel_version_test/LaravelPHP83Docker/instasure-dockerized]
└─$ curl ifconfig.me                                                              
119.148.19.193       

------------------------------------------------------------------------
#another way to find the dns server => 
--------------------------------------
┌──(shuvo㉿kali)-[~/Desktop/Linux/part 2- Administration]
└─$ cat /etc/resolv.conf

# Generated by NetworkManager
search localdomain
nameserver 192.168.174.2


#another way to find the dns server => 
--------------------------------------
┌──(shuvo㉿kali)-[~/Desktop/Linux/part 2- Administration]
└─$ ip route
default via 192.168.174.2 dev eth0 proto dhcp src 192.168.174.128 metric 100 
192.168.174.0/24 dev eth0 proto kernel scope link src 192.168.174.128 metric 100 




#another way to find the dns server => 
--------------------------------------
┌──(ashraful㉿kali)-[~]
└─$ traceroute google.com
traceroute to google.com (142.250.196.78), 30 hops max, 60 byte packets
 1  _gateway (192.168.3.1)  1.024 ms  0.894 ms  0.834 ms
 2  119.148.19.193 (119.148.19.193)  85.838 ms  1.091 ms  1.126 ms
 3  172.16.55.217 (172.16.55.217)  42.841 ms  43.121 ms  43.338 ms
 4  172.31.0.21 (172.31.0.21)  42.893 ms  43.015 ms  43.070 ms
 5  10.98.99.1 (10.98.99.1)  42.714 ms  42.900 ms  42.960 ms
 6  10.220.33.61 (10.220.33.61)  42.368 ms  45.514 ms  45.449 ms
 7  10.220.12.222 (10.220.12.222)  45.522 ms  43.463 ms  43.415 ms
 8  10.131.166.164 (10.131.166.164)  46.986 ms  46.863 ms  48.935 ms
 9  72.14.221.138 (72.14.221.138)  74.062 ms  78.480 ms  78.362 ms
10  * * *
11  216.239.43.234 (216.239.43.234)  76.803 ms maa03s46-in-f14.1e100.net (142.250.196.78)  76.669 ms 142.251.49.216 (142.251.49.216)  70.902 ms




#netstat -antp 
---------------

┌──(shuvo㉿kali)-[~/Desktop/Linux/part 2- Administration]
└─$ netstat -antp      
(Not all processes could be identified, non-owned process info
 will not be shown, you would have to be root to see it all.)
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 192.168.174.128:52384   142.250.182.142:443     ESTABLISHED 2944/firefox-esr    
tcp        0      0 192.168.174.128:55602   142.250.195.110:443     ESTABLISHED 2944/firefox-esr    
tcp        0      0 192.168.174.128:60682   142.250.205.234:443     ESTABLISHED 2944/firefox-esr    
tcp        0      0 192.168.174.128:55082   34.107.243.93:443       ESTABLISHED 2944/firefox-esr    
tcp        0      0 192.168.174.128:40232   142.250.182.142:443     ESTABLISHED 2944/firefox-esr    
tcp        0      0 192.168.174.128:39850   142.250.193.99:443      ESTABLISHED 2944/firefox-esr    


netstat  -a => for all 
netstat  -n => numerical address  
netstat  -t => tcp 
netstat  -p => show the name of programme . 


------------------------------------------------------------------------


---

# 🌐 Network Notes (A → Z)

### 🖧 Interfaces

* **eth0** → Wired network card (LAN cable)
* **lo** → Loopback interface (localhost, `127.0.0.1`)
* **wlan0** → Wireless network card (Wi-Fi)

---

### 🌍 IP Types

* **public\_ip** → Assigned by ISP, visible on the internet (`curl ifconfig.me`)
* **private\_ip** → Local address (`ifconfig` shows `192.168.x.x`, `10.x.x.x`, `172.16–31.x.x`)

---

### 🚪 Gateway

👉 Default router IP (connects LAN → Internet)

```
[PC/Phone: private_ip] ---> [Router: gateway_ip] ---> [ISP: public_ip] ---> 🌐 Internet
```

---

### 📡 Flow of Communication

```
private_ip (PC/Phone)
      ↓
   Router (gateway_ip)
      ↓
  ISP assigns public_ip
      ↓
     Internet 🌐
      ↓
 Destination public_ip
      ↓
  Their Router
      ↓
 private_ip (server/service)
```

---

### 🔑 Ports

👉 Every service listens on a **port**.

* HTTP → `80`
* HTTPS → `443`
* SSH → `22`
* MySQL → `3306`

```
http://machine_ip:80  
http://36.255.69.72:8081   (custom port example)
```

---

### 📛 DNS (Domain Name System)

👉 Converts names ↔ IPs

```
DNS name: dnsgroupe.net  
Resolved IP: 36.255.69.72:8081
```

---

### 🔎 DNS Resolve Workflow

```
Browser asks → OS → Resolver (ISP DNS)
    ↓
   Root DNS (.)
    ↓
   TLD DNS (.net, .com)
    ↓
   Authoritative DNS (ns1 / ns2)
    ↓
   Final IP returned → Connection
```

---

### 🗂️ Subnet

👉 A **range of IPs** inside a network, defined by subnet mask.

* Example: `192.168.1.0/24` → hosts `192.168.1.1 → 192.168.1.254`

```
[192.168.1.0/24] = Network
  ├─ 192.168.1.1 → Router
  ├─ 192.168.1.2 → PC
  └─ 192.168.1.3 → Phone
```

---

### 📖 Nameserver

👉 Server that answers DNS queries.

* **ns1**, **ns2** → Authoritative DNS servers for a domain.

```
dnsgroupe.net
   ├─ ns1.provider.com
   └─ ns2.provider.com
```

---

✅ Now you have **A → Z flow**:

1. Device uses **eth0/wlan0/lo**
2. Gets **private\_ip**
3. Sends to **gateway (router\_ip)**
4. Router → **NAT → public\_ip**
5. Traffic goes through **ports**
6. DNS resolves domain → IP via **nameservers (ns1, ns2)**
7. Uses **subnet** rules for local communication
8. Packets reach target server’s **public\_ip**

---



------------------------------------------------------------------------

---

# 🌐 Networking A → Z Cheatsheet

---

### 🖧 Interfaces

```
eth0   = Wired network  
wlan0  = Wireless network  
lo     = Loopback (127.0.0.1 / localhost)
```

---

### 🌍 IP Types

```
Public IP  = Unique global address (check: curl ifconfig.me)  
Private IP = Local LAN address (check: ifconfig)
```

---

### 🚪 Gateway (Router IP)

👉 Router connects your LAN to ISP.

```
[PC/Phone: private_ip] ---> [Router: gateway_ip] ---> [ISP: public_ip] ---> 🌐 Internet
```

---

### 🔄 NAT (Network Address Translation)

👉 Router changes private IP → public IP before going out.

```
192.168.1.10:5000 --> NAT --> 203.0.113.5:40001
```

---

### 🛣️ Routing Table

👉 Map of where packets should go.

```
Destination       Next Hop
0.0.0.0/0         ISP Gateway
192.168.1.0/24    Local LAN
10.0.0.0/24       VPN Tunnel
```

---

### 🔑 Ports

👉 Services run on ports.

```
HTTP   → 80  
HTTPS  → 443  
SSH    → 22  
MySQL  → 3306  

Access: http://machine_ip:port  
Example: http://36.255.69.72:8081
```

---

### 📛 DNS (Domain Name System)

👉 Converts **domain name → IP**

```
dnsgroupe.net  --->  36.255.69.72
```

---

### 🔎 DNS Resolve Workflow

```
Browser → Resolver (ISP)  
       → Root DNS (.)  
       → TLD DNS (.net, .com)  
       → Authoritative DNS (ns1, ns2)  
       → Returns IP
```

---

### 🗂️ Subnet

👉 Defines IP range in a network.

```
192.168.1.0/24  
 ├─ Router: 192.168.1.1  
 ├─ PC:     192.168.1.2  
 └─ Phone:  192.168.1.3
```

---

### 📖 Nameservers

👉 Special servers that answer DNS lookups.

```
dnsgroupe.net  
 ├─ ns1.provider.com  
 └─ ns2.provider.com
```

---

### 📡 Full Data Flow (Complete View)

```
[PC/Phone: private_ip]  
        ↓  
   [Router: gateway_ip]  
        ↓ (NAT)  
   [ISP: public_ip]  
        ↓  
     🌐 Internet  
        ↓  
 [Server: public_ip]  
        ↓  
   [Server Router]  
        ↓  
[Target Machine: private_ip + port/service]
```

---

This gives you a **full A → Z compact note with ASCII diagrams** ✅


------------------------------------------------------------------------
------------------------------------------------------------------------
------------------------------------------------------------------------
