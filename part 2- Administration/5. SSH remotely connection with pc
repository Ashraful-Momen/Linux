#connect ssh from kali to other pc .
-------------------------------------

*** ssh key file location is : /etc/ssh

>>> sudo -i 

>>> cd /etc/ssh 
>>> mkdir default-keys 
>>> mv ssh_host_* /default-keys 

#generate again the ssh_key 
>>>dpkg-reconfigure openssh-server


---------------------------------------------
#now allow sshd_config file permission for root and authentication yes.

┌──(root㉿kali)-[/etc/ssh]
└─# ls
default-key         ssh_host_ecdsa_key.pub    sshd_config
moduli              ssh_host_ed25519_key      sshd_config.d
ssh_config          ssh_host_ed25519_key.pub  sshd_config.ucf-dist
ssh_config.d        ssh_host_rsa_key
ssh_host_ecdsa_key  ssh_host_rsa_key.pub
                                                                                
┌──(root㉿kali)-[/etc/ssh]
└─# nano sshd_config         
                                                                                
┌──(root㉿kali)-[/etc/ssh]
└─# nano sshd_config

-------------------------------------------------------


>>>service ssh restart
------------------------------------------------------
┌──(root㉿kali)-[/etc/ssh]
└─# ifconfig
eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 192.168.174.128  netmask 255.255.255.0  broadcast 192.168.174.255
        inet6 fe80::20c:29ff:feb6:8e17  prefixlen 64  scopeid 0x20<link>
        ether 00:0c:29:b6:8e:17  txqueuelen 1000  (Ethernet)
        RX packets 113562  bytes 159790569 (152.3 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 52986  bytes 5294640 (5.0 MiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0

lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 24  bytes 1440 (1.4 KiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 24  bytes 1440 (1.4 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0


-------------------------------------------------------

#allow the ssh port firewile form kali 

┌──(shuvo㉿kali)-[~]
└─$ sudo ufw allow 22
Rules updated
Rules updated (v6)
----------------------------------------------------------
1.restart the ssh >>> sudo service ssh restart

2.stop the firewall from the windows (private and public)
----------------------------------------------------------
#now connect the kali ip to the otehr pc .... 

----------------------------------------------------------
# now download winSCP and connet the kali root with it . then can able to show the folder of kali ....

-------------------------------------------------------------
#for connecting from other linux machine : ssh userName@ip_address . 
>>> password.
Fun!
-------------------------------------------------------------
-----------------------et/ssh/sshd_config file permission --------------------------------------
================================================================================================
┌──(shuvo㉿kali)-[~]
└─$ cat /etc/ssh/sshd_config

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/bin:/usr/games

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

Include /etc/ssh/sshd_config.d/*.conf

#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

#HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
PermitRootLogin yes
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

PubkeyAuthentication yes

# Expect .ssh/authorized_keys2 to be disregarded by default in future.
#AuthorizedKeysFile	.ssh/authorized_keys .ssh/authorized_keys2

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication yes
#PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
KbdInteractiveAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the KbdInteractiveAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via KbdInteractiveAuthentication may bypass
# the setting of "PermitRootLogin prohibit-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and KbdInteractiveAuthentication to 'no'.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
PermitTTY yes
PrintMotd no
#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem	sftp	/usr/lib/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#

#connet with the ssh : 
-----------------------
>>> ssh userName@ip -p 22 (optional if port: 22)
