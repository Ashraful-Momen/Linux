#cron job: 
----------
install cron >>> sudo apt install cron 

----------------
edit cron  >>> crontab -e

#then open a text editor . 
#add the line in the bottom . 
----------------------------------------------------------
#show the cron jobs list >>> crontab -l
-----------------------------
#how to check the php version in the system >>> which php
----------------------------------------------------------

(* * * * * - indecate time) where_php_installed_in_system  project_path/artisan schedule:run >> cron_log_path
example: 
-----------
* * * * * /usr/local/bin/php /home/ashraful/Laravel7/instasure-microsite-main/artisan schedule:run >> /home/ashraful/Laravel7/cron.log 2>&1
------------
For the Server: 
----------------
* * * * * /usr/local/bin/php /nginx/instaweb/artisan schedule:run >> /nginx/instaweb/cron.log 2>&1
----------------------------------------------------------
# check the cron log >>> cat /home/ashraful/Laravel7/cron.log

#check cron status >>> sudo service cron status|restart|start|stop
------------------------------------------------------------------










#explain the time and date of the cron 
======================================
Sure! Let's break down the `cron` syntax step by step for the example:

```yaml
on:
  schedule:
    - cron: '* * * * *'  # Runs every minute
```

### Cron Syntax
The `cron` syntax consists of five fields, each representing a time unit:

```
MINUTE HOUR DAY MONTH DAY_OF_WEEK
```

Hereâ€™s what each field means:

1. **MINUTE**: Minute of the hour (0â€“59)
   - `*` means "every minute."
   - Example: `*/5` means "every 5 minutes."

2. **HOUR**: Hour of the day (0â€“23)
   - `*` means "every hour."
   - Example: `0` means "at the start of the hour (e.g., 12:00, 1:00, etc.)."

3. **DAY**: Day of the month (1â€“31)
   - `*` means "every day of the month."
   - Example: `1` means "on the 1st day of the month."

4. **MONTH**: Month of the year (1â€“12)
   - `*` means "every month."
   - Example: `6` means "only in June."

5. **DAY_OF_WEEK**: Day of the week (0â€“6, where `0` is Sunday)
   - `*` means "every day of the week."
   - Example: `0` means "only on Sundays."

---

### What Does `* * * * *` Mean?
- `*` in all fields means "every possible value."
- So, `* * * * *` translates to:
  - Every **minute** (0, 1, 2, ..., 59)
  - Every **hour** (0, 1, 2, ..., 23)
  - Every **day of the month** (1, 2, 3, ..., 31)
  - Every **month** (1, 2, 3, ..., 12)
  - Every **day of the week** (0, 1, 2, ..., 6)

This means the job will **run every minute, every hour, every day, every month, and every day of the week**.

---

### Examples of Other Cron Expressions

1. **Every 5 Minutes**
   ```yaml
   cron: '*/5 * * * *'
   ```
   - Runs at 0, 5, 10, 15, ..., 55 minutes of every hour.

2. **Every Day at Midnight**
   ```yaml
   cron: '0 0 * * *'
   ```
   - Runs at 00:00 (midnight) every day.

3. **Every Monday at 3:30 AM**
   ```yaml
   cron: '30 3 * * 1'
   ```
   - Runs at 3:30 AM every Monday.

4. **On the 1st of Every Month at Noon**
   ```yaml
   cron: '0 12 1 * *'
   ```
   - Runs at 12:00 PM on the 1st day of every month.

5. **Every Year on January 1st at Midnight**
   ```yaml
   cron: '0 0 1 1 *'
   ```
   - Runs at 00:00 on January 1st every year.

---

### Key Notes
- The `cron` syntax is based on **UTC time** unless you configure your CI/CD system to use a specific timezone.
- If you want to run a job at a specific time, replace the `*` with the desired value.
- You can combine multiple schedules under the `schedule` key to run jobs at different intervals.

Let me know if you need further clarification! ðŸ˜Š

**** After setup the cron in the system then restart the cron service . 
